openapi: 3.0.3
info:
  title: KreeKt Production Readiness Validation API
  description: API for validating production readiness of KreeKt codebase
  version: 1.0.0

paths:
  /validate:
    post:
      summary: Execute full production readiness validation
      operationId: validateProductionReadiness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
      responses:
        '200':
          description: Validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionReadinessReport'
        '400':
          description: Invalid configuration
        '500':
          description: Validation error

  /validate/compilation:
    post:
      summary: Validate compilation across platforms
      operationId: validateCompilation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompilationRequest'
      responses:
        '200':
          description: Compilation validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompilationResult'

  /validate/tests:
    post:
      summary: Execute test suite and measure coverage
      operationId: validateTests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
      responses:
        '200':
          description: Test validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResults'

  /validate/performance:
    post:
      summary: Run performance benchmarks
      operationId: validatePerformance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformanceRequest'
      responses:
        '200':
          description: Performance validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceResult'

  /validate/security:
    post:
      summary: Check for security vulnerabilities
      operationId: validateSecurity
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRequest'
      responses:
        '200':
          description: Security validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityResult'

  /validate/constitutional:
    post:
      summary: Validate constitutional compliance
      operationId: validateConstitutional
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Constitutional validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstitutionalCompliance'

components:
  schemas:
    ValidationRequest:
      type: object
      required:
        - projectPath
      properties:
        projectPath:
          type: string
          description: Path to KreeKt project root
        configuration:
          $ref: '#/components/schemas/ValidationConfiguration'

    ValidationConfiguration:
      type: object
      properties:
        enabledCategories:
          type: array
          items:
            type: string
            enum: [ compilation, testing, performance, security, constitutional ]
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/Platform'
        performanceRequirements:
          $ref: '#/components/schemas/PerformanceRequirements'
        coverageThreshold:
          type: number
          format: float
          default: 95.0
        maxArtifactSize:
          type: integer
          format: int64
          default: 2097152
        failFast:
          type: boolean
          default: false
        generateHtmlReport:
          type: boolean
          default: true

    Platform:
      type: string
      enum:
        - JVM
        - JS
        - NATIVE_LINUX_X64
        - NATIVE_WINDOWS_X64
        - NATIVE_MACOS_X64
        - NATIVE_MACOS_ARM64
        - ANDROID
        - IOS
        - WATCHOS
        - TVOS

    PerformanceRequirements:
      type: object
      properties:
        minFps:
          type: number
          format: float
          default: 120.0
        maxInitTime:
          type: integer
          format: int64
          default: 2000
        maxMemoryUsage:
          type: integer
          format: int64

    ProductionReadinessReport:
      type: object
      required:
        - timestamp
        - overallStatus
        - overallScore
        - categories
      properties:
        timestamp:
          type: string
          format: date-time
        branchName:
          type: string
        commitHash:
          type: string
        overallStatus:
          $ref: '#/components/schemas/ValidationStatus'
        overallScore:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ValidationCategory'
        remediationActions:
          type: array
          items:
            $ref: '#/components/schemas/RemediationAction'
        executionTime:
          type: string

    ValidationStatus:
      type: string
      enum:
        - PASSED
        - FAILED
        - WARNING
        - SKIPPED
        - ERROR

    ValidationCategory:
      type: object
      required:
        - name
        - status
        - score
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/ValidationStatus'
        score:
          type: number
          format: float
        weight:
          type: number
          format: float
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/ValidationCriterion'

    ValidationCriterion:
      type: object
      required:
        - id
        - name
        - status
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        requirement:
          type: string
        actual:
          type: string
        status:
          $ref: '#/components/schemas/ValidationStatus'
        severity:
          $ref: '#/components/schemas/Severity'
        details:
          type: object
        platform:
          $ref: '#/components/schemas/Platform'

    Severity:
      type: string
      enum:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW

    RemediationAction:
      type: object
      required:
        - criterionId
        - title
        - steps
      properties:
        criterionId:
          type: string
        title:
          type: string
        description:
          type: string
        steps:
          type: array
          items:
            type: string
        estimatedEffort:
          type: string
        priority:
          type: integer
        automatable:
          type: boolean
        command:
          type: string

    CompilationRequest:
      type: object
      properties:
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/Platform'

    CompilationResult:
      type: object
      properties:
        overallStatus:
          $ref: '#/components/schemas/ValidationStatus'
        platformResults:
          type: object
          additionalProperties:
            type: object
            properties:
              compiled:
                type: boolean
              errors:
                type: array
                items:
                  type: string

    TestRequest:
      type: object
      properties:
        coverageThreshold:
          type: number
          format: float

    TestResults:
      type: object
      properties:
        totalTests:
          type: integer
        passedTests:
          type: integer
        failedTests:
          type: integer
        skippedTests:
          type: integer
        coverage:
          type: object
          properties:
            linePercentage:
              type: number
              format: float
            branchPercentage:
              type: number
              format: float
            meetsRequirement:
              type: boolean

    PerformanceRequest:
      type: object
      properties:
        requirements:
          $ref: '#/components/schemas/PerformanceRequirements'

    PerformanceResult:
      type: object
      properties:
        fps:
          type: object
          properties:
            min:
              type: number
            average:
              type: number
            max:
              type: number
            p95:
              type: number
            p99:
              type: number
            meetsRequirement:
              type: boolean
        memory:
          type: object
          properties:
            heapUsed:
              type: integer
              format: int64
            gpuMemory:
              type: integer
              format: int64
            withinBudget:
              type: boolean
        initialization:
          type: object
          properties:
            timeMillis:
              type: integer
              format: int64
            meetsRequirement:
              type: boolean

    SecurityRequest:
      type: object
      properties:
        scanDependencies:
          type: boolean
          default: true

    SecurityResult:
      type: object
      properties:
        vulnerabilities:
          type: array
          items:
            type: object
            properties:
              cve:
                type: string
              severity:
                $ref: '#/components/schemas/Severity'
              dependency:
                type: string
              description:
                type: string

    ConstitutionalCompliance:
      type: object
      properties:
        tddCompliance:
          type: boolean
        productionReadyCode:
          type: boolean
        crossPlatformCompatibility:
          type: boolean
        performanceStandards:
          type: boolean
        typeSafety:
          type: boolean
        violations:
          type: array
          items:
            type: object
            properties:
              principle:
                type: string
              description:
                type: string
              evidence:
                type: string