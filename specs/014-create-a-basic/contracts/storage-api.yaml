openapi: 3.0.3
info:
  title: VoxelCraft Storage API
  description: API contracts for localStorage persistence
  version: 1.0.0

components:
  schemas:
    Vector3:
      type: object
      required: [ x, y, z ]
      properties:
        x: { type: number, format: float }
        y: { type: number, format: float }
        z: { type: number, format: float }

    Rotation:
      type: object
      required: [ pitch, yaw ]
      properties:
        pitch: { type: number, format: float }
        yaw: { type: number, format: float }

    SerializedChunk:
      type: object
      required: [ chunkX, chunkZ, compressedBlocks ]
      properties:
        chunkX: { type: integer }
        chunkZ: { type: integer }
        compressedBlocks: { type: string, format: byte, description: "Base64-encoded RLE-compressed block data" }

    WorldState:
      type: object
      required: [ seed, playerPosition, playerRotation, isFlying, chunks ]
      properties:
        seed: { type: integer, format: int64 }
        playerPosition: { $ref: '#/components/schemas/Vector3' }
        playerRotation: { $ref: '#/components/schemas/Rotation' }
        isFlying: { type: boolean }
        chunks:
          type: array
          items: { $ref: '#/components/schemas/SerializedChunk' }
          minItems: 1
          maxItems: 1024

    SaveResponse:
      type: object
      required: [ success, sizeBytes ]
      properties:
        success: { type: boolean }
        sizeBytes: { type: integer, minimum: 0 }
        error: { type: string, description: "Error message if success=false" }

    StorageInfo:
      type: object
      required: [ usedBytes, availableBytes, percentUsed ]
      properties:
        usedBytes: { type: integer, minimum: 0 }
        availableBytes: { type: integer, minimum: 0 }
        percentUsed: { type: number, format: float, minimum: 0, maximum: 100 }

paths:
  /storage/save:
    post:
      summary: Save world state to localStorage
      operationId: saveWorldState
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorldState'
      responses:
        '200':
          description: World saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResponse'
        '507':
          description: Insufficient storage (localStorage quota exceeded)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveResponse'
        '500':
          description: Save failed

  /storage/load:
    get:
      summary: Load world state from localStorage
      operationId: loadWorldState
      responses:
        '200':
          description: World loaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorldState'
        '404':
          description: No saved world found
        '500':
          description: Load failed (corrupted data)

  /storage/clear:
    delete:
      summary: Clear saved world data
      operationId: clearWorldState
      responses:
        '200':
          description: World data cleared
        '500':
          description: Clear failed

  /storage/size:
    get:
      summary: Get current storage usage
      operationId: getStorageSize
      responses:
        '200':
          description: Storage info retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageInfo'
