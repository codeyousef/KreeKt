openapi: 3.0.3
info:
  title: VoxelCraft World API
  description: API contracts for world generation and block manipulation
  version: 1.0.0

components:
  schemas:
    BlockType:
      type: string
      enum: [ AIR, GRASS, DIRT, STONE, WOOD, LEAVES, SAND, WATER ]

    Position3D:
      type: object
      required: [ x, y, z ]
      properties:
        x: { type: integer, minimum: -256, maximum: 255 }
        y: { type: integer, minimum: 0, maximum: 255 }
        z: { type: integer, minimum: -256, maximum: 255 }

    ChunkPosition:
      type: object
      required: [ chunkX, chunkZ ]
      properties:
        chunkX: { type: integer, minimum: -16, maximum: 15 }
        chunkZ: { type: integer, minimum: -16, maximum: 15 }

    Block:
      type: object
      required: [ type, position ]
      properties:
        type: { $ref: '#/components/schemas/BlockType' }
        position: { $ref: '#/components/schemas/Position3D' }

    ChunkData:
      type: object
      required: [ chunkX, chunkZ, blocks ]
      properties:
        chunkX: { type: integer }
        chunkZ: { type: integer }
        blocks:
          type: array
          items: { type: integer, minimum: 0, maximum: 7 }
          minItems: 65536
          maxItems: 65536
          description: "Flat array of block type IDs (16x16x256 = 65,536 blocks)"

    WorldBounds:
      type: object
      required: [ minX, maxX, minY, maxY, minZ, maxZ ]
      properties:
        minX: { type: integer, const: -256 }
        maxX: { type: integer, const: 255 }
        minY: { type: integer, const: 0 }
        maxY: { type: integer, const: 255 }
        minZ: { type: integer, const: -256 }
        maxZ: { type: integer, const: 255 }

    WorldGenerationRequest:
      type: object
      required: [ seed ]
      properties:
        seed: { type: integer, format: int64 }

paths:
  /world/generate:
    post:
      summary: Generate new world from seed
      operationId: generateWorld
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorldGenerationRequest'
      responses:
        '200':
          description: World generated successfully
          content:
            application/json:
              schema:
                type: object
                required: [ chunksGenerated, seed ]
                properties:
                  chunksGenerated: { type: integer, minimum: 1024, maximum: 1024 }
                  seed: { type: integer, format: int64 }
        '400':
          description: Invalid seed

  /world/block/{x}/{y}/{z}:
    get:
      summary: Get block at position
      operationId: getBlock
      parameters:
        - name: x
          in: path
          required: true
          schema: { type: integer, minimum: -256, maximum: 255 }
        - name: y
          in: path
          required: true
          schema: { type: integer, minimum: 0, maximum: 255 }
        - name: z
          in: path
          required: true
          schema: { type: integer, minimum: -256, maximum: 255 }
      responses:
        '200':
          description: Block retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
        '404':
          description: Position outside world bounds

    put:
      summary: Set block at position
      operationId: setBlock
      parameters:
        - name: x
          in: path
          required: true
          schema: { type: integer, minimum: -256, maximum: 255 }
        - name: y
          in: path
          required: true
          schema: { type: integer, minimum: 0, maximum: 255 }
        - name: z
          in: path
          required: true
          schema: { type: integer, minimum: -256, maximum: 255 }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ type ]
              properties:
                type: { $ref: '#/components/schemas/BlockType' }
      responses:
        '200':
          description: Block updated
        '400':
          description: Invalid block type
        '403':
          description: Position outside world bounds

  /world/chunk/{chunkX}/{chunkZ}:
    get:
      summary: Get chunk data
      operationId: getChunk
      parameters:
        - name: chunkX
          in: path
          required: true
          schema: { type: integer, minimum: -16, maximum: 15 }
        - name: chunkZ
          in: path
          required: true
          schema: { type: integer, minimum: -16, maximum: 15 }
      responses:
        '200':
          description: Chunk data retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChunkData'
        '404':
          description: Chunk not found

  /world/bounds:
    get:
      summary: Get world boundaries
      operationId: getWorldBounds
      responses:
        '200':
          description: World bounds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorldBounds'
